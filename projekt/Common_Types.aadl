package Common_Types
public
    with Base_Types;
    with Data_Model;

    bus ethernet
    end ethernet;

    memory RAM
        features
            BA1: requires bus access ethernet;
    end RAM;

    memory implementation RAM.Standard
    end RAM.Standard;

    data TemperatureType
        properties
            Data_Model::Data_Representation => Integer;
    end TemperatureType;

    data HeatPower
        properties
            Data_Model::Data_Representation => Integer;
            Data_Model::Integer_Range => 0 .. 100;
    end HeatPower;

    data OperationMode
        properties
            Data_Model::Enumerators => ("OFF", "STANDBY", "HEATING", "DEFROST", "GRILL");
    end OperationMode;

    data UserCommand
    end UserCommand;

    data implementation UserCommand.impl
        subcomponents
            mode_selection: data OperationMode;
            power_level: data HeatPower;
            timer_setting: data Base_Types::Integer_32;
            start_stop: data Base_Types::Boolean;
    end UserCommand.impl;

    data Status
    end Status;

    data implementation Status.impl
        subcomponents
            temperature: data TemperatureType;
            power_level: data HeatPower;
            operation_mode: data OperationMode;
            door_open: data Base_Types::Boolean;
    end Status.impl;

    data DisplayData
    end DisplayData;

    data implementation DisplayData.impl
        subcomponents
            message: data Base_Types::String;
            remaining_time: data Base_Types::Integer_32;
            current_power: data Base_Types::Integer_32;
            current_temp: data Base_Types::Float;
    end DisplayData.impl;
    
        data implementation SystemStatus.impl
        subcomponents
            temperature: data TemperatureType;
            power_level: data HeatPower;
            operation_mode: data OperationMode;
            door_open: data Base_Types::Boolean;
            remaining_time: data Base_Types::Integer_32;
            current_power: data Base_Types::Integer_32;
            current_temp: data Base_Types::Float;
            message: data Base_Types::String;
    end SystemStatus.impl;

end Common_Types;